{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rishi\\\\OneDrive\\\\Desktop\\\\Web_Machine\\\\React_web\\\\image-segmentation\\\\src\\\\ImageSegmentation.js\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { Upload, Loader } from 'lucide-react';\nimport './ImageSegmentation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageSegmentation() {\n  _s();\n  const [originalImage, setOriginalImage] = useState(null);\n  const [segmentedImage, setSegmentedImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleImageUpload = useCallback(async file => {\n    if (!file) return;\n    try {\n      setLoading(true);\n      setError(null);\n      const formData = new FormData();\n      formData.append('image', file);\n      const response = await fetch('http://localhost:5000/segment', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to process image');\n      }\n      const data = await response.json();\n      setOriginalImage(URL.createObjectURL(file));\n      setSegmentedImage(`data:image/png;base64,${data.image}`);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const onDrop = useCallback(e => {\n    e.preventDefault();\n    const file = e.dataTransfer.files[0];\n    if (file !== null && file !== void 0 && file.type.startsWith('image/')) {\n      handleImageUpload(file);\n    }\n  }, [handleImageUpload]);\n  const onDragOver = useCallback(e => {\n    e.preventDefault();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Peakaboo Pixels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      onDrop: onDrop,\n      onDragOver: onDragOver,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-text\",\n        children: \"Upload your image to remove it's background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"imageInput\",\n        accept: \"image/*\",\n        style: {\n          display: 'none'\n        },\n        onChange: e => handleImageUpload(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageInput\",\n        className: \"upload-button\",\n        children: \"Choose Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(Loader, {\n        className: \"animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), \"Processing image...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), (originalImage || segmentedImage) && /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"image-title\",\n            children: \"Peek\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-wrapper\",\n            children: originalImage && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: originalImage,\n              alt: \"Original\",\n              className: \"image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"image-title\",\n            children: \"aBoo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-wrapper\",\n            children: segmentedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: segmentedImage,\n              alt: \"Segmented\",\n              className: \"image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageSegmentation, \"WbP9itE8Rcjm6vsbv4yOqsMyhuQ=\");\n_c = ImageSegmentation;\nexport default ImageSegmentation;\nvar _c;\n$RefreshReg$(_c, \"ImageSegmentation\");","map":{"version":3,"names":["useState","useCallback","Upload","Loader","jsxDEV","_jsxDEV","ImageSegmentation","_s","originalImage","setOriginalImage","segmentedImage","setSegmentedImage","loading","setLoading","error","setError","handleImageUpload","file","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","URL","createObjectURL","image","err","message","onDrop","e","preventDefault","dataTransfer","files","type","startsWith","onDragOver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","accept","style","display","onChange","target","htmlFor","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/rishi/OneDrive/Desktop/Web_Machine/React_web/image-segmentation/src/ImageSegmentation.js"],"sourcesContent":["import { useState, useCallback } from 'react';\r\nimport { Upload, Loader } from 'lucide-react';\r\nimport './ImageSegmentation.css';\r\n\r\nfunction ImageSegmentation() {\r\n  const [originalImage, setOriginalImage] = useState(null);\r\n  const [segmentedImage, setSegmentedImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleImageUpload = useCallback(async (file) => {\r\n    if (!file) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n\r\n      const response = await fetch('http://localhost:5000/segment', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to process image');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      setOriginalImage(URL.createObjectURL(file));\r\n      setSegmentedImage(`data:image/png;base64,${data.image}`);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const onDrop = useCallback((e) => {\r\n    e.preventDefault();\r\n    const file = e.dataTransfer.files[0];\r\n    if (file?.type.startsWith('image/')) {\r\n      handleImageUpload(file);\r\n    }\r\n  }, [handleImageUpload]);\r\n\r\n  const onDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">Peakaboo Pixels</h1>\r\n\r\n      <div \r\n        className=\"upload-container\"\r\n        onDrop={onDrop}\r\n        onDragOver={onDragOver}\r\n      >\r\n        <p className=\"upload-text\">Upload your image to remove it's background</p>\r\n        <input\r\n          type=\"file\"\r\n          id=\"imageInput\"\r\n          accept=\"image/*\"\r\n          style={{ display: 'none' }}\r\n          onChange={(e) => handleImageUpload(e.target.files[0])}\r\n        />\r\n        <label htmlFor=\"imageInput\" className=\"upload-button\">\r\n          Choose Image\r\n        </label>\r\n      </div>\r\n\r\n      {loading && (\r\n        <div className=\"loading\">\r\n          <Loader className=\"animate-spin\" />\r\n          Processing image...\r\n        </div>\r\n      )}\r\n\r\n      {error && (\r\n        <div className=\"error\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {(originalImage || segmentedImage) && (\r\n        <center><div className=\"image-grid\">\r\n          <div className=\"image-box\">\r\n            <h3 className=\"image-title\">Peek</h3>\r\n            <div className=\"image-wrapper\">\r\n              {originalImage && (\r\n                <img\r\n                  src={originalImage}\r\n                  alt=\"Original\"\r\n                  className=\"image\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"image-box\">\r\n            <h3 className=\"image-title\">aBoo</h3>\r\n            <div className=\"image-wrapper\">\r\n              {segmentedImage && (\r\n                <img\r\n                  src={segmentedImage}\r\n                  alt=\"Segmented\"\r\n                  className=\"image\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div></center>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageSegmentation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}