{"ast":null,"code":"import{useState,useCallback}from'react';import{Upload,Loader}from'lucide-react';import'./ImageSegmentation.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL='https://peak-a-boo.onrender.com';function ImageSegmentation(){const[originalImage,setOriginalImage]=useState(null);const[segmentedImage,setSegmentedImage]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[uploadProgress,setUploadProgress]=useState(0);const handleImageUpload=useCallback(async file=>{if(!file)return;try{setLoading(true);setError(null);const formData=new FormData();formData.append('image',file);// Explicitly log the URL we're using\nconst url=\"\".concat(API_URL,\"/segment\");console.log('Attempting upload to:',url);// Remove the hardcoded URL\nconst response=await fetch(\"\".concat(API_URL,\"/segment\"),{method:'POST',body:formData,mode:'cors',credentials:'omit',headers:{'Accept':'application/json','Origin':'http://localhost:3000'// Add this\n}});if(!response.ok){const errorText=await response.text();throw new Error(errorText||'Failed to process image');}const data=await response.json();if(!data.image){throw new Error('Invalid response from server');}setOriginalImage(URL.createObjectURL(file));setSegmentedImage(\"data:image/png;base64,\".concat(data.image));}catch(err){console.error('Upload error:',err);setError(err.message);}finally{setLoading(false);}},[]);const onDrop=useCallback(e=>{e.preventDefault();const file=e.dataTransfer.files[0];if(file!==null&&file!==void 0&&file.type.startsWith('image/')){handleImageUpload(file);}else{setError('Please drop a valid image file');}},[handleImageUpload]);const onDragOver=useCallback(e=>{e.preventDefault();e.stopPropagation();},[]);const onDragEnter=useCallback(e=>{e.preventDefault();e.stopPropagation();},[]);const clearError=useCallback(()=>{setError(null);},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Peakaboo Pixels\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"upload-container\",onDrop:onDrop,onDragOver:onDragOver,onDragEnter:onDragEnter,onClick:clearError,children:[/*#__PURE__*/_jsx(\"p\",{className:\"upload-text\",children:\"Upload your image to remove its background\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"imageInput\",accept:\"image/*\",style:{display:'none'},onChange:e=>{const file=e.target.files[0];if(file){handleImageUpload(file);}e.target.value='';// Reset input\n}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"imageInput\",className:\"upload-button\",children:loading?/*#__PURE__*/_jsxs(\"span\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(Loader,{className:\"animate-spin mr-2\"}),\"Processing...\"]}):/*#__PURE__*/_jsxs(\"span\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(Upload,{className:\"w-4 h-4 mr-2\"}),\"Choose Image\"]})}),uploadProgress>0&&uploadProgress<100&&/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat(uploadProgress,\"%\")}})})]}),loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading\",children:[/*#__PURE__*/_jsx(Loader,{className:\"animate-spin\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Processing image... Please wait\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:\"This may take up to 60 seconds\"})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error\",onClick:clearError,children:[/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"small\",{children:\"Click to dismiss\"})]}),(originalImage||segmentedImage)&&/*#__PURE__*/_jsxs(\"div\",{className:\"image-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"image-box\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"image-title\",children:\"Original\"}),/*#__PURE__*/_jsx(\"div\",{className:\"image-wrapper\",children:originalImage&&/*#__PURE__*/_jsx(\"img\",{src:originalImage,alt:\"Original\",className:\"image\",onError:()=>setError('Failed to load original image')})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"image-box\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"image-title\",children:\"Background Removed\"}),/*#__PURE__*/_jsx(\"div\",{className:\"image-wrapper\",children:segmentedImage&&/*#__PURE__*/_jsx(\"img\",{src:segmentedImage,alt:\"Processed\",className:\"image\",onError:()=>setError('Failed to load processed image')})})]})]})]});}export default ImageSegmentation;","map":{"version":3,"names":["useState","useCallback","Upload","Loader","jsx","_jsx","jsxs","_jsxs","API_URL","ImageSegmentation","originalImage","setOriginalImage","segmentedImage","setSegmentedImage","loading","setLoading","error","setError","uploadProgress","setUploadProgress","handleImageUpload","file","formData","FormData","append","url","concat","console","log","response","fetch","method","body","mode","credentials","headers","ok","errorText","text","Error","data","json","image","URL","createObjectURL","err","message","onDrop","e","preventDefault","dataTransfer","files","type","startsWith","onDragOver","stopPropagation","onDragEnter","clearError","className","children","onClick","id","accept","style","display","onChange","target","value","htmlFor","width","src","alt","onError"],"sources":["C:/Users/rishi/OneDrive/Desktop/Peek_a_boo_Frontend/image-segmentation/src/ImageSegmentation.js"],"sourcesContent":["import { useState, useCallback } from 'react';\r\nimport { Upload, Loader } from 'lucide-react';\r\nimport './ImageSegmentation.css';\r\n\r\nconst API_URL = 'https://peak-a-boo.onrender.com'; \r\n\r\nfunction ImageSegmentation() {\r\n  const [originalImage, setOriginalImage] = useState(null);\r\n  const [segmentedImage, setSegmentedImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  const handleImageUpload = useCallback(async (file) => {\r\n    if (!file) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n\r\n      // Explicitly log the URL we're using\r\n      const url = `${API_URL}/segment`;\r\n      console.log('Attempting upload to:', url);\r\n\r\n      // Remove the hardcoded URL\r\n      const response = await fetch(`${API_URL}/segment`, {\r\n        method: 'POST',\r\n        body: formData,\r\n        mode: 'cors',\r\n        credentials: 'omit',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Origin': 'http://localhost:3000'  // Add this\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(errorText || 'Failed to process image');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!data.image) {\r\n        throw new Error('Invalid response from server');\r\n      }\r\n\r\n      setOriginalImage(URL.createObjectURL(file));\r\n      setSegmentedImage(`data:image/png;base64,${data.image}`);\r\n    } catch (err) {\r\n      console.error('Upload error:', err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const onDrop = useCallback((e) => {\r\n    e.preventDefault();\r\n    const file = e.dataTransfer.files[0];\r\n    if (file?.type.startsWith('image/')) {\r\n      handleImageUpload(file);\r\n    } else {\r\n      setError('Please drop a valid image file');\r\n    }\r\n  }, [handleImageUpload]);\r\n\r\n  const onDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  const onDragEnter = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">Peakaboo Pixels</h1>\r\n\r\n      <div \r\n        className=\"upload-container\"\r\n        onDrop={onDrop}\r\n        onDragOver={onDragOver}\r\n        onDragEnter={onDragEnter}\r\n        onClick={clearError}\r\n      >\r\n        <p className=\"upload-text\">Upload your image to remove its background</p>\r\n        <input\r\n          type=\"file\"\r\n          id=\"imageInput\"\r\n          accept=\"image/*\"\r\n          style={{ display: 'none' }}\r\n          onChange={(e) => {\r\n            const file = e.target.files[0];\r\n            if (file) {\r\n              handleImageUpload(file);\r\n            }\r\n            e.target.value = ''; // Reset input\r\n          }}\r\n        />\r\n        <label htmlFor=\"imageInput\" className=\"upload-button\">\r\n          {loading ? (\r\n            <span className=\"flex items-center\">\r\n              <Loader className=\"animate-spin mr-2\" />\r\n              Processing...\r\n            </span>\r\n          ) : (\r\n            <span className=\"flex items-center\">\r\n              <Upload className=\"w-4 h-4 mr-2\" />\r\n              Choose Image\r\n            </span>\r\n          )}\r\n        </label>\r\n        {uploadProgress > 0 && uploadProgress < 100 && (\r\n          <div className=\"progress-bar\">\r\n            <div \r\n              className=\"progress-fill\"\r\n              style={{ width: `${uploadProgress}%` }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {loading && (\r\n        <div className=\"loading\">\r\n          <Loader className=\"animate-spin\" />\r\n          <p>Processing image... Please wait</p>\r\n          <p className=\"text-sm text-gray-500\">This may take up to 60 seconds</p>\r\n        </div>\r\n      )}\r\n\r\n      {error && (\r\n        <div className=\"error\" onClick={clearError}>\r\n          <p>{error}</p>\r\n          <small>Click to dismiss</small>\r\n        </div>\r\n      )}\r\n\r\n      {(originalImage || segmentedImage) && (\r\n        <div className=\"image-grid\">\r\n          <div className=\"image-box\">\r\n            <h3 className=\"image-title\">Original</h3>\r\n            <div className=\"image-wrapper\">\r\n              {originalImage && (\r\n                <img\r\n                  src={originalImage}\r\n                  alt=\"Original\"\r\n                  className=\"image\"\r\n                  onError={() => setError('Failed to load original image')}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"image-box\">\r\n            <h3 className=\"image-title\">Background Removed</h3>\r\n            <div className=\"image-wrapper\">\r\n              {segmentedImage && (\r\n                <img\r\n                  src={segmentedImage}\r\n                  alt=\"Processed\"\r\n                  className=\"image\"\r\n                  onError={() => setError('Failed to load processed image')}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageSegmentation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}